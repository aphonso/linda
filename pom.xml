<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>be.lindacare.currency.market.aphonso</groupId>
	<artifactId>lindacareRESTfulAPI</artifactId>
	<version>1.0.0-RELEASE</version>
	<packaging>jar</packaging>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.5.RELEASE</version>
		<relativePath />
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<webjars.bootstrap.version>4.1.3</webjars.bootstrap.version>
		<webjars.popper.version>1.14.3</webjars.popper.version>
		<webjars.jquery.version>3.3.1</webjars.jquery.version>
		<swagger.version>2.9.2</swagger.version>
	</properties>

	<dependencies>

		<!-- Generates setters/getters, hashCode, equals and toString methods -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Starter for building web, including RESTful, applications using Spring 
			MVC. Uses Tomcat as the default embedded container -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Brings security abilities to the Spring Boot and Management Server 
			User, Role (high-level) and Privilege (low-level, granular privilege/authority) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Allows testing spring security user and roles by providing MockMvc -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Server-side Java template engine -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- Optional, for bootstrap -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>${webjars.bootstrap.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.webjars</groupId>
					<artifactId>popper.js</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Bootstrap dependency -->
		<dependency>
			<groupId>org.webjars.bower</groupId>
			<artifactId>popper.js</artifactId>
			<version>${webjars.popper.version}</version>
		</dependency>

		<!-- Bootstrap dependency -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>${webjars.jquery.version}</version>
		</dependency>
		
		<!-- Elastic Search Dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
		</dependency>
		
		<!-- Avoids java.lang.NoClassDefFoundError: org/elasticsearch/transport/Netty3Plugin -->
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>transport</artifactId>
		</dependency>

		<!-- Provides a rate limit -->
		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>guava</artifactId>
		    <version>23.0</version>
		</dependency>
		
		<!-- Creates API endpoint information JSON -->
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger2</artifactId>
		    <version>${swagger.version}</version>
		</dependency>

		<!-- Creates API endpoint information UI -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
		    <version>${swagger.version}</version>
        </dependency>

		<!-- Junit capabilities and surefire executor -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Allows changing and deployment automatically - only for dev -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
			<scope>runtime</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<!-- To create an executable jar -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>